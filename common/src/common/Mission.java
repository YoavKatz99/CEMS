package common;

/**
 *
 * Represents a mission in the application.
 *
 * The Mission enum contains various missions that can be performed in the
 * application, each with a mission name and a serial number.
 */

public enum Mission {
	GET_QUESTIONS("GET_QUESTIONS", 0), EDIT_QUESTIONS_DATA("EDIT_QUESTIONS_DATA", 1),
	SEND_CONNECTION_DETAILS("SEND_CONNECTION_DETAILS", 2), SEND_DISCONNECTION_DETAILS("SEND_DISCONNECTION_DETAILS", 3),
	LOGIN("LOGIN", 4), GET_GRADES("GET_GRADES", 5), LOGOUT("LOGOUT", 6), GET_COURSES("GET_COURSES", 7),
	GET_TESTS_OF_COURSE("GET_TESTS_OF_COURSE", 8), GENERATE_LECTURER_REPORT("GENERATE_LECTURER_REPORT", 9),
	GET_DB_TABLE("GET_DB_TABLE", 10), ADD_QUESTIONS_DATA("ADD_QUESTIONS_DATA", 11), GET_TESTS("GET_TESTS", 12),
	DOWNLOAD_TESTS("DOWNLOAD_TESTS", 13), UPLOAD_TESTS("UPLOAD_TESTS", 14), GET_ID("GET_ID", 15),
	GET_QUESTIONS_FROM_TEST("GET_QUESTIONS_FROM_TEST", 16), GET_LISTS("GET_LISTS", 17),
	GENERATE_DEP_HEAD_REPORT("GENERATE_DEP_HEAD_REPORT", 18), GET_REQUESTS("GET_REQUESTS", 19),
	UPDATE_REQUESTS("UPDATE_REQUESTS", 20), GET_ALL_TESTS_STATS("GET_ALL_TESTS_STATS", 21),
	ADD_PERFORMED_TEST("ADD_PERFORMED_TEST", 22), GET_MAX_CODE_QUESTION("GET_MAX_CODE_QUESTION", 23),
	GET_IP("GET_IP", 24), GET_YAEL("GET_YAEL", 25), GET_QUESTION_TABLE("GET_QUESTION_TABLE", 26),
	GET_QUESTION_TABLE_FOR_TEST("GET_QUESTION_TABLE_FOR_TEST", 27), UP_TEST("UP_TEST", 28), GET_TEST("GET_TEST", 29),
	GET_MY_TESTS("GET_MY_TESTS", 30), UPDATE_MY_TESTS("UPDATE_MY_TESTS", 31),
	SEND_EXTENSION_REQUEST("SEND_EXTENSION_REQUEST", 32), CHECK_REQUEST_CHANGE("CHECK_REQUEST_CHANGE", 33),
	GET_PERFORMED_TESTS("GET_PERFORMED_TESTS", 34), ADD_TEST_DATA("ADD_TEST_DATA", 35),
	GET_ID_FROM_CODE("GET_ID_FROM_CODE", 36), GET_SINGLE_TEST("GET_SINGLE_TEST", 37),
	GET_SINGLE_TEST2("GET_SINGLE_TEST2", 38), CONCLUDE_REQUESTS("CONCLUDE_REQUESTS", 39), GET_STATUS("GET_STATUS", 40),
	GET_STATUS_TEST("GET_STATUS_TEST", 41), GET_REQUEST_TEST("GET_REQUEST_TEST", 42),
	GET_TEST_BY_CHOICE("GET_TEST_BY_CHOICE", 43), GET_GRADES_BY_LECTURER("GET_GRADES_BY_LECTURER", 44),
	UPDATE_PERFORMED_TESTS("UPDATE_PERFORMED_TESTS", 45), SELECTED_QUESTIONS("SELECTED_QUESTIONS", 46),
	ADD_TEST_QUESTION("ADD_TEST_QUESTION", 47), ADD_TEST("ADD_TEST", 48), MAX_NUM_TEST_ID("MAX_NUM_TEST_ID", 49),
	CREATE_TEST_DATA("CREATE_TEST_DATA", 50);

	private Mission(final String mission, final int serialNumber) {
	}
}
